enabled: true
description: Pipeline to use mongo db as search backend
routes:
  - path: mongo-db-example/_reactivesearch
    method: POST
    classify:
      category: reactivesearch

envs:
  category: reactivesearch

global_envs:
  - label: MongoDB Host
    key: MONGO_HOST
    value: ""
    description: "The mongoDB host to connect to"
  - label: MongoDB Database Name
    key: MONGO_DB
    value: "sample_airbnb"
    description: "The mongoDB database to connect to"
  - label: MongoDB Collection
    key: MONGO_COLLECTION
    value: "listingsAndReviews"
    description: "The mongoDB collection to connect to"
  - label: MongoDB Credentials
    key: MONGO_CREDS
    value: ""
    description: "Credentials to access the mongoDB instance"
    validate:
      url: "`${MONGO_HOST}/${MONGO_DB}`"
      headers:
        Authorization: "`Basic ${btoa(${MONGO_CREDS})}`"
      method: GET
      expected_status: 200

stages:
  - use: authorization
    continueOnError: false
  - use: reactivesearchQuery
    inputs:
      backend: mongodb
    continueOnError: false
  - id: extract envs to context
    script: "function handleRequest() { return { mongoHost: context.envs.MONGO_HOST, mongoCreds: context.envs.MONGO_CREDS, mongoDb: context.envs.MONGO_DB, mongoCollection: context.envs.MONGO_COLLECTION } }"
  - use: mongoDBQuery
    inputs:
      host: "{{mongoHost}}"
      credentials: "{{mongoCreds}}"
      db: "{{mongoDb}}"
      collection: "{{mongoCollection}}"
      connectionOptions: authSource=admin&readPreference=primary&ssl=true
    continueOnError: false
