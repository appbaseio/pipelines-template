{
    "enabled": true,
    "description": "Pipeline to show usage of httpRequest stage",
    "routes": [
        {
            "path": "books/suggestions",
            "method": "POST",
            "classify": {
                "category": "reactivesearch"
            }
        }
    ],
    "global_envs": [
        {
            "key": "ES_URL",
            "value": "",
            "description": "The ElasticSearch URL to run ES requests to",
            "label": "ElasticSearch URL",
            "validate": {
                "url": "${ES_URL}",
                "method": "GET",
                "expected_status": 200
            }
        }
    ],
    "stages": [
        {
            "id": "data_muse_api",
            "description": "To get data from data muse api in asynchronous manner",
            "use": "httpRequest",
            "async": true,
            "inputs": {
                "url": "https://api.datamuse.com/sug",
                "params": {
                    "s": "{{context.envs.query}}"
                }
            },
            "continueOnError": false
        },
        {
            "use": "reactivesearchQuery",
            "continueOnError": false
        },
        {
            "use": "elasticsearchQuery",
            "async": true,
            "continueOnError": false,
            "inputs": {
                "url": "${ES_URL}"
            }
        },
        {
            "id": "merge_response",
            "description": "Merges the data muse response to RS API response",
            "needs": [
                "data_muse_api"
            ],
            "script": "function handleRequest() { return { response: { ...context.response, body: JSON.stringify({ ...JSON.parse(context.response.body), data_muse: context.data_muse_api }) } } }"
        }
    ]
}