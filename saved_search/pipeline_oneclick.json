{
    "enabled": true,
    "description": "Pipeline to save search to an Elasticsearch index",
    "routes": [
        {
            "path": "/saved-search-demo",
            "method": "POST",
            "classify": {
                "category": "reactivesearch"
            }
        }
    ],
    "envs": {
        "category": "reactivesearch",
        "index": [
            "test"
        ],
        "save_search_URL": "${{ SAVED_SEARCH_URL }}",
        "save_search_METHOD": "POST",
        "save_search_headers": "{\"Content-Type\": \"application/json\"}"
    },
    "global_envs": [
        {
            "key": "ES_URL",
            "value": "",
            "description": "The ElasticSearch URL to run ES requests to",
            "label": "ElasticSearch URL",
            "validate": {
                "url": "${ES_URL}",
                "method": "GET",
                "expected_status": 200
            }
        },
        {
            "key": "SAVED_SEARCH_URL",
            "label": "Save Search URL",
            "description": "URL to send the save search request to",
            "value": ""
        }
    ],
    "stages": [
        {
            "use": "authorization"
        },
        {
            "id": "save_search",
            "async": true,
            "script": "async function handleRequest() { try { const headersPassed = JSON.parse(context.envs.save_search_HEADERS); const res = await fetch(context.envs.save_search_URL, { method: context.envs.save_search_METHOD, body: context.request.body, headers: headersPassed }); } catch (e) { console.log('error', e); } return {}; }"
        },
        {
            "use": "reactivesearchQuery",
            "needs": [
                "save_search"
            ]
        },
        {
            "use": "elasticsearchQuery",
            "inputs": {
                "url": "${ES_URL}"
            }
        }
    ]
}