{
    "enabled": true,
    "description": "Pipeline to retrieve and merge Google knowledge graph response to ES response",
    "routes": [
        {
            "path": "/knowledge-graph/_reactivesearch",
            "method": "POST",
            "classify": {
                "category": "reactivesearch"
            }
        }
    ],
    "envs": {
        "category": "reactivesearch",
        "index": [
            "test"
        ],
        "knowledgeGraphAPIKey": "${{ KNOWLEDGE_GRAPH_API_KEY }}"
    },
    "global_envs": [
        {
            "key": "knowledgeGraphAPIKey",
            "value": "${{ KNOWLEDGE_GRAPH_API_KEY }}",
            "description": "API key to access Google's Knowledge Graph",
            "label": "Knowledge Graph API Key"
        }
    ],
    "stages": [
        {
            "use": "authorization"
        },
        {
            "id": "modify_request",
            "script": "function handleRequest() { const reqBody = JSON.parse(context.request.body); return { request: { ...context.request, body: JSON.stringify({ ...reqBody, query: [...reqBody.query, { id: 'search2' }] }) } }; }"
        },
        {
            "use": "reactivesearchQuery"
        },
        {
            "id": "google_knowledge_graph",
            "async": true,
            "script": "async function handleRequest() { try { const URL = `https://kgsearch.googleapis.com/v1/entities:search?query=${context.envs.query}&key=${context.envs.knowledgeGraphAPIKey}&limit=1&indent=True`; const responseBody = await fetch(URL); const response = JSON.parse(responseBody); return { knowledge_graph: response } } catch (e) { } return context; }"
        },
        {
            "use": "elasticsearchQuery",
            "async": true
        },
        {
            "id": "merge_response",
            "needs": [
                "elasticsearchQuery",
                "google_knowledge_graph"
            ],
            "script": "function handleRequest() { const esResponse = JSON.parse(context.elasticsearchQuery); const knowledgeGraph = context['knowledge_graph']; return { ...context, response: { ...context.response, body: JSON.stringify({ ...esResponse, knowledgeGraph }) } } }"
        }
    ]
}